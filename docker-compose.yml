version: '3.8'

services:
  quickscene:
    build: .
    container_name: quickscene-app
    ports:
      - "8000:8000"
    volumes:
      - ./data:/app/data
      - ./config.yaml:/app/config.yaml
      - ./logs:/app/logs
    environment:
      - QUICKSCENE_HOST=0.0.0.0
      - QUICKSCENE_PORT=8000
      - QUICKSCENE_DEBUG=false
      - QUICKSCENE_WORKERS=1
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/api/v1/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s
    networks:
      - quickscene-network

  nginx:
    image: nginx:alpine
    container_name: quickscene-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - quickscene
    restart: unless-stopped
    networks:
      - quickscene-network

  prometheus:
    image: prom/prometheus:latest
    container_name: quickscene-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    restart: unless-stopped
    networks:
      - quickscene-network

  grafana:
    image: grafana/grafana:latest
    container_name: quickscene-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=quickscene123
      - GF_USERS_ALLOW_SIGN_UP=false
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
    restart: unless-stopped
    networks:
      - quickscene-network

  redis:
    image: redis:alpine
    container_name: quickscene-redis
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    restart: unless-stopped
    networks:
      - quickscene-network

volumes:
  prometheus-data:
  grafana-data:
  redis-data:

networks:
  quickscene-network:
    driver: bridge
